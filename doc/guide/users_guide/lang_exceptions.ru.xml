<?xml version="1.0"?>
<!DOCTYPE manualpage SYSTEM "../style/dtd/manual.dtd">

<?xml-stylesheet type="text/xsl" href="../style/xsl/manual.ru.xsl"?>

<manualpage metafile="lang_exceptions.xml.meta" lang="ru">

<title>Программные исключения</title>

<summary>
   Эта глава содержит информацию о концепции обработки ошибок сценария dbPager -
   программных исключениях.
</summary>

<section id="overview">
   <title>Программные исключения</title>
   <p>В процессе выполнения сценария dbPager может возникнуть ситуация, когда
      дальнейшее поведение программы не определено из-за возникшей ошибки.
      В этом случае можно говорить о возникновении исключительной ситуации.</p>
   <p>При возникновении исключительной ситуации выполнение сценария
      приостанавливается и клиенту, вызвавшему этот сценарий, возвращается
      ответ с описанием ошибки.</p>
   <p>В случае необходимости изменить поведение программы при возникновении
      программного исключения, можно перехватить программное исключение
      и произвести необходимые действия, продолжив обычное выполнение
      сценария. Также возможно самостоятельно возбуждать
      исключительные ситуации в случае возникновения логических ошибок
      при выполнении программы, обеспечивая унификацию обработки
      системных и логических (пользовательских) ошибок.</p>
</section>

<section id="exceptions">
   <title>Обработка исключительных ситуаций</title>
   <p>Для обработки (перехвата) исключительной ситуации, используется пара
      тегов <term>&lt;dbp:try></term> и <term>&lt;dbp:catch></term>.
      Фрагмент кода, в котором необходимо перехватить исключительную
      ситуацию, заключается в тег <name>&lt;dbp:try></name>. В него же
      вкладывается тег <name>&lt;dbp:catch></name>, в котором размещается
      код обработки ошибки:</p>
   <code>&lt;dbp:try>
   [Программный код]
   &lt;dbp:catch>
      [Код обработки ошибки]
   &lt;/dbp:catch>
&lt;/dbp:try></code>
   <p>Теги обработки исключительной ситуации могут быть вложенными. Если в
      теге <name>&lt;dbp:catch></name> возникает исключительная ситуация,
      то выполнение программы останавливается и происходит переход к обработчику
      исключительной ситуации на предыдущем уровне вложения:</p>
   <code>&lt;dbp:try>
   [Программный код]
   &lt;dbp:try>
      [Программный код]
      &lt;dbp:catch>
         [Код обработки ошибки]
         &lt;dbp:throw message="you are not logged in"/>
      &lt;/dbp:catch>
   &lt;/dbp:try>
   &lt;dbp:catch>
      [Код обработки ошибки]
   &lt;/dbp:catch>
&lt;/dbp:try></code>
   <p>При возникновении исключительной ситуации во фрагменте кода, заключенного
      в тег <name>&lt;dbp:try></name>, происходит выполнение кода, вложенного в тег
      <name>&lt;dbp:catch></name>. При этом тег <name>&lt;dbp:catch></name>
      автоматически инициализирует переменную <term>error_message</term>,
      содержащую текст с сообщением об ошибке, возникшей при исключительной
      ситуации.</p>
   <p>Результаты работы кода, вложенного в <name>&lt;dbp:try></name>,
      возвращаются клиенту только в случае, если при его исполнении не возникло
      исключительных ситуаций.</p>
</section>

<section id="throw">
   <title>Возбуждение исключительных ситуаций</title>
   <p>Для возбуждения исключительной ситуации используется тег
      <term>&lt;dbp:throw></term>:</p>
      <code>&lt;dbp:throw <param>message="<value>текст</value>"</param>/></code>
   <p>Обязательный параметр <name>message</name> должен содержать текст
      сообщения об ошибке, который будет доступен в качестве переменной
      <name>error_message</name> при обработке ошибки в коде, вложенном в
      тег <name>catch</name>.</p>
   <p>В нижеследующем примере демонстрируется использование возможности
      централизованной обработки ошибок с помощью тегов операций над
      исключительными ситуациями:</p>
   <example>
      <title>Калькулятор</title>
      <comment>
         <p>В этом примере мы усовершенствуем калькулятор, описанный в разделе
         "<link to="lang_vars" bookmark="expressions">Переменные и выражения</link>",
         дополнив его возможностью проверки корректности пользовательского
         ввода, а также защитив сценарий от возможности вызова пользователем
         <link to="lang_vars" bookmark="expressions_operands">внешних
         функций</link> в целях безопасности.</p>
         <p>Калькулятор функционирует так же, как и описано в разделе
            "<link to="lang_vars" bookmark="expressions">Переменные и
            выражения</link>",
            за исключением того, что если пользователь введет некорректное
            выражение для вычисления, выполнение тега с выводом результата
            вычисления (<name>&lt;p>Результат: {{$expr}}&lt;/p></name>)
            прерывается и вместо этого происходит выполнение кода, вложенного
            в тег перехвата исключительной ситуации <name>&lt;dbp:catch></name>,
            а именно вывод сообщения об ошибке. В случае если пользователь
            введет выражение, содержащее символ "@", то возбуждается
            исключительная ситуация и также происходит выполнение кода,
            вложенного в тег <name>&lt;dbp:catch></name>.</p>
         <p>В этом примере предполагается, что пользователь при вводе выражения
            для вычисления забыл закрывающую скобку в
            выражении "<value>(2 + 3)*2</value>".</p>
      </comment>
      <input>
&lt;?xml version="1.0" encoding="UTF-8" ?>

&lt;!DOCTYPE dbp:module SYSTEM "http://dbpager.org.ru/shemas/dbp/3.0/module.dtd">

&lt;dbp:module xmlns:dbp="http://dbpager.org.ru/shemas/dbp/3.0"
 xmlns="http://www.w3.org/1999/xhtml">

   &lt;html>
      &lt;head>&lt;title>Калькулятор&lt;/title>&lt;/head>
      &lt;body>
         &lt;dbp:try>
            &lt;form method="post">
               &lt;p>Выражение:&lt;/p>
               &lt;input type="text" name="expr" value="{$expr}"/>
               &lt;input type="submit"/>
            &lt;/form>
            &lt;dbp:switch test="{pos('@',$expr) > 0}">
               &lt;dbp:case match="1">
                  &lt;dbp:throw message="вызов внешних функций не допускается"/>
               &lt;/dbp:case>
            &lt;/dbp:switch>
            &lt;p>Результат: {{$expr}}&lt;/p>
            &lt;dbp:catch>
               &lt;p>В результате вычисления произошла ошибка "{$error_message}".&lt;/p>
            &lt;/dbp:catch>
         &lt;/dbp:try>
      &lt;/body>
   &lt;/html>

&lt;/dbp:module>
      </input>
      <output>
&lt;html>
   &lt;head>&lt;title>Калькулятор&lt;/title>&lt;/head>
   &lt;body>
      &lt;form method="post">
         &lt;p>Выражение:&lt;/p>
         &lt;input type="text" name="expr" value="(2 + 3*2"/>
         &lt;input type="submit"/>
      &lt;/form>
      &lt;p>В результате вычисления произошла ошибка: "invalid expression: ")" expected".&lt;/p>
   &lt;/body>
&lt;/html>
      </output>
   </example>
</section>

</manualpage>
